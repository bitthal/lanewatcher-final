/* styles.css */
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
@import url('./font.css');

body {
  font-family: 'OpenSansExtraBold', sans-serif;
  scroll-behavior: smooth !important;

}
button {
  font-family: 'OpenSansMedium', sans-serif;
}
input {
  font-family: 'OpenSansRegular', sans-serif;

}
/* Add custom transition properties */
@layer utilities {
  .transition {
    transition-property: all;
    transition-duration: 300ms;
    transition-timing-function: ease-in-out;
    transition-delay: 0ms;
  }
}
.mt-6rem{
  margin-top: 50px;
  height: 200px;
}
.mt-7rem{
  margin-top: 53px;
  height: 220px;
}
/* .mt-3rem{
  margin-top: 3rem;
} */
.disabled {
  opacity: 0.5; 
  /* Reduce opacity to visually indicate the button is disabled */
  pointer-events: none; /* Disable mouse events to prevent interactions */
}
.lane-1{
  float: left;
}
div#DateRangePickerChildren {
  display: flex;
}

.top-header{
  z-index: 9999!important;
}
/* @keyframes buttonAnimation {
  0% {
    transform: perspective(500px) rotateX(-5deg) rotateY(0) translateZ(0);
  }
  50% {
    transform: perspective(500px) rotateX(-5deg) rotateY(-30deg) translateZ(10px);
  }
  100% {
    transform: perspective(500px) rotateX(-5deg) rotateY(5deg) translateZ(0);
  }
}

.button-3d {
  cursor: pointer;
  /* transition: transform 0.3s ease; */
  /* animation: buttonAnimation 2s infinite; */
  /* transform-style: preserve-3d; Ensure 3D transformations are preserved */
  /* transition: transform 0.3s ease;
  transform: rotateX(-30deg) rotateY(10deg) scale(1.1);
} */



/* .button-3d:hover {
  transform: rotateX(30deg) rotateY(10deg) scale(1.1);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Add a subtle shadow for depth */
/* }   */

div#daterangepicker {
  right: 0!important;
  left: auto;
}
.realTimeView{
  width: 1000px;
}
.toggle-password-button{
  position: absolute;
  top: 50%;
  cursor: pointer;
}
.sign-in-toggle-password-button{
  position: absolute;
  top: 60%;
  cursor: pointer;
}
/* -------container size------------- */
.container-sk {
    padding-right: 15px;
    padding-left: 15px;
    margin-right: auto;
    margin-left: auto;
  }
  @media (max-width:787) {
    .realTimeView{
      width: 100%;
    }
  }
  @media (min-width: 768px) {
    
    .container-sk {
      width: 720px;
    }
  }
  @media (min-width: 992px) {
    .container-sk {
      width: 960px;
    }
    
  }
  @media (min-width: 1200px) {
    .container-sk {
      width: 1140px;
    }
  }


  @media (min-width: 1400px) {
    .container-sk {
      width: 1320px;
    }
  }
/* -------------------------------------------------------------- */

/* --------ScrollBar ----------- */


/* scrollbar */

/* body::-webkit-scrollbar-track {
  width: 3px;
  background-color: #FCF9F1 !important;
  cursor: pointer!important;
}

::-webkit-scrollbar {
  width: 12px;
  background-color:#cacaca !important;
  border-radius: 12px;
  cursor: pointer!important;
} */



::-webkit-scrollbar-thumb {
  width: 12px;
  background-color:#cacaca !important;
  border-radius: 12px;
  cursor: pointer!important;
}
/* ------------------------------------------------------------- */

.ReactModal__Overlay{
  background-color: rgba(0, 0, 0, 0.658) !important;
}


#nprogress .bar {
  background: #ff0101 !important;
  z-index: 5000 !important;

}

@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

.no-data-message {
  text-align: center;
  animation: bounce 1s infinite;
}

/* .duration-300 {
  transition-duration: 300ms;
  transition-property: transform, opacity;
} */

.sidebar {
  transition: width 0.9s linear, width 0.9s ease-out;
}


@keyframes fadeInTranslate {
  to {
    opacity: 1;
    transform: translateX(50);
  }
}

.sidebar-entry {
  opacity: 0;
  animation: fadeInTranslate 0.9s forwards;
}

.fa-beat-fade {
  animation: beatFade 1s infinite;
}

/* .shadow-blue { */
  /* box-shadow: 0px 0px 0px 5px rgba(0, 0, 255, 0.2); */
   /* Adjust the shadow values and color as needed */
/* } */
.animate-gradient {
  background: linear-gradient(to left, #2a0077, #120997);
  
  box-shadow: 0 1px 13px 3px rgb(16 15 14);
}

/* Apply styles when button is hovered */
.button-hover:hover button:not(.exclude-blur) {
  filter: blur(5px); /* Apply blur to the button */
  transition: filter 0.3s; /* Add transition for the blur effect */
}

/* Update the CSS for the .icons-container */
.icons-container {
  position: absolute;
  top: 10px;
  right: 3px;
  display: flex;
  opacity: 0; /* Initially hide the icons */
  transform: scale(0.8); /* Start with a smaller scale */
  transition: opacity 0.3s, transform 0.3s; /* Add transition for opacity and transform */
}

.icons-container.real-time{
  position: absolute;
  top: 10px;
  right: 40px;
  display: flex;
  opacity: 0; /* Initially hide the icons */
  transform: scale(0.8); /* Start with a smaller scale */
  transition: opacity 0.3s, transform 0.3s; /* Add transition for opacity and transform */
}
/* Apply styles when button is hovered */
.relative:hover .icons-container {
  opacity: 1;
  transform: scale(1); /* Scale up the icons on hover */
  z-index: 1;
}

/* Apply styles to the individual icons */
.icons-container svg {
  font-size: 1.5rem; /* Increase the icon size */
  margin-right: 8px; /* Add spacing between icons */
  transition: transform 0.3s; /* Add transition for transform */
}

/* Apply styles when icon is hovered */
.icons-container svg:hover {
  transform: scale(1.2); /* Increase the icon size on hover */
}

.loading {
  position: relative;
}

.loading::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #f3f3f3; /* Set the background color to match your design */
  border-radius: 8px; /* Adjust the border-radius to match your design */
  animation: loadingAnimation 1s infinite ease-in-out; /* You can adjust the animation timing and type */
}

@keyframes loadingAnimation {
  0%, 100% {
    opacity: 0.6; /* Set the opacity as needed */
    transform: translateX(-100%);
  }
  50% {
    opacity: 1;
    transform: translateX(100%);
  }
}


